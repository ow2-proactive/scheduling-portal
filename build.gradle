buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "http://repository.activeeon.com/content/groups/proactive/"
        }
    }

    dependencies {
        classpath "com.diffplug.gradle.spotless:spotless:2.4.0"
        classpath "org.ow2.proactive:coding-rules:1.0.0"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.1"
        delete "gradle/ext"
        ant.unjar src: configurations.classpath.find { it.name.startsWith("coding-rules") }, dest: 'gradle/ext'
    }
}


subprojects {
    apply plugin: 'java'
    apply plugin: 'jetty'
    apply plugin: 'maven'

    apply from: "$rootDir/gradle/ext/coding-format.gradle"

    group = 'org.ow2.proactive_grid_cloud_portal'
    version = schedulingPortalVersion

    sourceCompatibility = 1.8

    repositories {
        if (project.hasProperty('local')) {
           mavenLocal()
        }
        jcenter()
        maven { url 'http://repository.activeeon.com/content/groups/proactive/' }
        maven { url 'http://repository.sonatype.org/content/groups/forge/' }
        maven { url 'http://repository.activeeon.com/content/repositories/thirdparty/' }
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                snapshotRepository(url: "http://repository.activeeon.com/content/repositories/snapshots/") {
                    authentication(userName: "${System.getProperty('nexusUsername')}",
                            password: "${System.getProperty('nexusPassword')}")
                }
                repository(url: "http://repository.activeeon.com/content/repositories/releases/") {
                    authentication(userName: "${System.getProperty('nexusUsername')}",
                            password: "${System.getProperty('nexusPassword')}")
                }
            }
        }
    }

    dependencies {

        def jacksonVersion = "2.8.7"

        providedCompile 'com.google.gwt:gwt-user:2.8.0'
        providedCompile 'com.google.gwt:gwt-dev:2.8.0'
        providedCompile 'com.google.gwt:gwt-codeserver:2.8.0'
        // needed on the server side because we use GWT-RPC
        compile 'com.smartgwt:smartgwt:5.1d-2015-05-23'
        providedCompile 'com.google.gwt.google-apis:gwt-visualization:1.1.1'
        // Needed for GWT compile and at runtime for RequestBuilder
        // Specify two artifacts as workaround for GRADLE-1934
        compile('javax.validation:validation-api:1.0.0.GA')
        compile('javax.validation:validation-api:1.0.0.GA:sources')
        compile 'org.slf4j:slf4j-api:1.7.12'
        compile 'commons-io:commons-io:1.3.1'
        compile 'commons-fileupload:commons-fileupload:1.2'
        compile 'org.apache.httpcomponents:httpclient:4.3.6'
        compile 'org.apache.commons:gwt-commons-patricia-trie:4.0'
        compile("org.ow2.proactive:common-http:${schedulingPortalVersion}")
        compile("org.ow2.proactive:scheduling-api-graphql-beans-input-gwt:${schedulingPortalVersion}")
        compile("org.ow2.proactive:scheduling-api-graphql-common-gwt:${schedulingPortalVersion}")
        compile("org.ow2.proactive:scheduling-api-graphql-client-gwt:${schedulingPortalVersion}")

        compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
        compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
        compile "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
        compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:${jacksonVersion}"
        compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
        compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jacksonVersion}"
        compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-base:${jacksonVersion}"
        compile "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:${jacksonVersion}"
        compile "com.fasterxml.jackson.module:jackson-module-jaxb-annotations:${jacksonVersion}"

        compile 'com.google.guava:guava:21.0'
        compile 'com.google.guava:guava-gwt:21.0'

        compile 'org.jboss.resteasy:resteasy-jaxrs:3.0.17.Final'
        compile 'org.apache.httpcomponents:httpmime:4.3.6'

        runtime 'com.google.gwt:gwt-servlet:2.8.0'

        testCompile 'junit:junit:4.12'
        testCompile 'org.mockito:mockito-core:1.10.19'
        testCompile 'com.google.gwt.gwtmockito:gwtmockito:1.1.6'
    }

    jar { // build jar with sources for GWT
        from sourceSets.main.allSource
    }

}

project(':applet') {
    task visu(type: Jar) {
        from sourceSets.main.output
        exclude '**/DataServerLauncher*'
        archiveName = "visu.jar"
        manifest.attributes("Main-Class": "org.ow2.proactive_grid_cloud_portal.extra.RemoteViewer")
    }

    task dataserver(type: Jar) {
        from sourceSets.main.output
        exclude '**/RemoteViewer*'
        archiveName = "servers.jar"
        manifest.attributes("Main-Class": "org.ow2.proactive_grid_cloud_portal.extra.DataServerLauncher")
    }

    build.dependsOn visu, dataserver
}

project(':rm-portal') {
    dependencies {
        compile 'codemirror:codemirror2-gwt:1.2.0'
        compile 'org.jboss.resteasy:resteasy-client:3.0.17.Final'

        runtime 'org.slf4j:slf4j-simple:1.7.12'
        compile 'org.codehaus.jettison:jettison:1.2'
        compile project(':common-portal')
    }
    war {
        exclude('WEB-INF/deploy/portal/symbolMaps')
        def replaceTokens = {
            it.filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: ['portal_version': project.version])
        }
        filesMatching('**/portal.html', replaceTokens)
        filesMatching('**/rm.conf', replaceTokens)
    }
}

project(':scheduler-portal') {
    dependencies {
        compile 'raphaelgwt:raphaelgwt:r28'
        compile 'org.vectomatic:lib-gwt-file:0.3.3'
        compile 'org.codehaus.jettison:jettison:1.2'
        compile 'org.jboss.resteasy:resteasy-multipart-provider:3.0.17.Final'
        compile 'org.apache.commons:commons-csv:1.1'

        compile project(':common-portal')

        runtime 'org.slf4j:slf4j-simple:1.7.12'
    }

    war {
        exclude('WEB-INF/deploy/portal/symbolMaps')
        from project(':applet').visu.outputs
        from project(':applet').dataserver.outputs

        def replaceTokens = {
            it.filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: ['portal_version': project.version])
        }
        filesMatching('**/portal.html', replaceTokens)
        filesMatching('**/scheduler.conf', replaceTokens)
    }
}

configure([project(':scheduler-portal'), project(':rm-portal')]) {
    apply plugin: 'war'
    apply plugin: 'org.sonarqube'

    task compileGwt(dependsOn: classes, type: JavaExec) {
        standardOutput = System.out
        errorOutput = System.err

        inputs.source sourceSets.main.java.srcDirs
        inputs.dir sourceSets.main.output.resourcesDir
        outputs.dir "$buildDir/portal"

        logging.captureStandardOutput LogLevel.INFO
        logging.captureStandardError LogLevel.INFO

        // uncomment the following lines to see compiler output
        standardOutput = System.out
        errorOutput = System.err

        main = 'com.google.gwt.dev.Compiler'
        classpath {
            [sourceSets.main.java.srcDirs,           // Java source
                    sourceSets.main.output.resourcesDir,    // Generated resources
                    sourceSets.main.output.classesDir,      // Generated classes
                    sourceSets.main.compileClasspath,       // Deps
            ]
        }
        args = ["org.ow2.proactive_grid_cloud_portal.${project.name.capitalize() - "-portal"}",
                '-war', "$buildDir/portal",
                '-logLevel', 'ALL',
                '-localWorkers', '2',
        ]
        systemProperties = ['gwt.persistentunitcachedir': buildDir]

        jettyRun.dependsOn compileGwt
        war.dependsOn compileGwt
    }
    war {
        from "$buildDir/portal"
    }
}
